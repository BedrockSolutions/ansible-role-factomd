---

- block:
    - validate:
        schema:
          type: object
          oneOf:
            - properties:
                image:
                  type: string
                network:
                  type: string
                  enum:
                    - mainnet
                    - testnet
                  default: mainnet
                stackdriver_enabled:
                  type: boolean
                  default: no
                state:
                  type: string
                  enum:
                    - present
              required:
                - image
                - network
                - stackdriver_enabled
                - state
            - properties:
                state:
                  type: string
                  enum:
                    - absent
                    - started
                    - stopped
              required:
                - state
        instance: "{{ factomd }}"
      register: factomd_validated

    - set_fact:
        factomd_v: "{{ factomd_validated.result }}"

    - name: "Create the factomd container"
      docker_container:
        command: -startdelay=600 -faulttimeout=120 -config=/root/.factom/private/factomd.conf
        image: "{{ factomd_v.image | default(None) }}"
        labels:
          name: factomd
        log_driver: "{{ factomd_v.stackdriver_enabled | ternary('fluentd', None) }}"
        log_options:
          tag: factomd_docker
        name: factomd
        ports:
          - 8088:8088
          - 8090:8090
          - "{{ (factomd_v.network == 'mainnet') | ternary('8108:8108', '8110:8110') }}"
        restart_policy: no
        volumes:
          - factom_database:/root/.factom/m2
          - factom_keys:/root/.factom/private
        state: present
      when: factomd_v.state == 'present'

    - name: "Manage the factomd container: {{ factomd_v.state }}"
      docker_container:
        name: factomd
        state: "{{ factomd_v.state }}"
      when: factomd_v.state != 'present'
  tags:
    - factomd_container
